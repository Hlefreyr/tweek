diff --git a/node_modules/tweek-client/dist/TweekManagementClient/TweekManagementClient.js b/node_modules/tweek-client/dist/TweekManagementClient/TweekManagementClient.js
index 5c74098..edf5af7 100644
--- a/node_modules/tweek-client/dist/TweekManagementClient/TweekManagementClient.js
+++ b/node_modules/tweek-client/dist/TweekManagementClient/TweekManagementClient.js
@@ -77,19 +77,23 @@ var TweekManagementClient = (function () {
         };
         return this._fetch(url, config).then(noop);
     };
-    TweekManagementClient.prototype.getSuggestions = function (query, count) {
+    TweekManagementClient.prototype.getSuggestions = function (query, options) {
+        options = (typeof(options) === "number" ? {count:options, type:'field'} : options) || {};
         var queryParamsObject = {
             q: query,
-            count: count || defaultSearchCount,
+            count: options.count || defaultSearchCount,
+            type: options.type || 'field',
         };
         var queryString = utils_1.toQueryString(queryParamsObject);
         var url = this.config.baseServiceUrl + "/api/v2/suggestions" + queryString;
         return this._fetch(url).then(toJson);
     };
-    TweekManagementClient.prototype.search = function (query, count) {
+    TweekManagementClient.prototype.search = function (query, options) {
+        options = (typeof(options) === "number" ? {count:options, type:'field'} : options) || {};
         var queryParamsObject = {
             q: query,
-            count: count || defaultSearchCount,
+            count: options.count || defaultSearchCount,
+            type: options.type || 'field',
         };
         var queryString = utils_1.toQueryString(queryParamsObject);
         var url = this.config.baseServiceUrl + "/api/v2/search" + queryString;
diff --git a/node_modules/tweek-client/src/TweekManagementClient/TweekManagementClient.ts b/node_modules/tweek-client/src/TweekManagementClient/TweekManagementClient.ts
index 29686bf..3acdc24 100644
--- a/node_modules/tweek-client/src/TweekManagementClient/TweekManagementClient.ts
+++ b/node_modules/tweek-client/src/TweekManagementClient/TweekManagementClient.ts
@@ -95,20 +95,24 @@ export default class TweekManagementClient implements ITweekManagementClient {
     return this._fetch(url, config).then(noop);
   }
 
-  getSuggestions(query: string, count?: number): Promise<string[]> {
+  getSuggestions(query: string, options: number | {count?:number, type?: 'free' | 'field'} = {}): Promise<string[]> {
+    options = typeof(options) === "number" ? {count:options, type:'field'} : options;
     const queryParamsObject = {
       q: query,
-      count: count || defaultSearchCount,
+      count: options.count || defaultSearchCount,
+      type: options.type || 'field'
     };
     const queryString = toQueryString(queryParamsObject);
     const url = `${this.config.baseServiceUrl}/api/v2/suggestions${queryString}`;
     return this._fetch(url).then(toJson);
   }
 
-  search(query: string, count?: number): Promise<string[]> {
+  search(query: string, options: number | {count?:number, type?: 'free' | 'field'} = {}): Promise<string[]> {
+    options = typeof(options) === "number" ? {count:options, type:'field'} : options;
     const queryParamsObject = {
       q: query,
-      count: count || defaultSearchCount,
+      count: options.count || defaultSearchCount,
+      type: options.type || 'field'
     };
     const queryString = toQueryString(queryParamsObject);
     const url = `${this.config.baseServiceUrl}/api/v2/search${queryString}`;
